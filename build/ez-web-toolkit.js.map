{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8d5d288be41711572b35","webpack:///./src/models/results/problemResult.ts","webpack:///./src/index.ts","webpack:///./src/constants/index.ts","webpack:///./src/constants/eventConsts.ts","webpack:///./src/constants/typeConsts.ts","webpack:///./src/enums/index.ts","webpack:///./src/enums/editorState.ts","webpack:///./src/enums/errorResponseType.ts","webpack:///./src/enums/httpStatusCode.ts","webpack:///./src/enums/managerState.ts","webpack:///./src/exceptions/index.ts","webpack:///./src/exceptions/responseError.ts","webpack:///./src/models/index.ts","webpack:///./src/models/http/requestOptions.ts","webpack:///./src/models/results/validationProblemResult.ts","webpack:///./src/models/uiGrid/uiGridRequest.ts","webpack:///./src/models/uiGrid/uiGridResult.ts","webpack:///./src/models/errorBlock.ts"],"names":[],"mappings":"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","file":"ez-web-toolkit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ez-web-toolkit\"] = factory();\n\telse\n\t\troot[\"ez-web-toolkit\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8d5d288be41711572b35","import { HttpStatusCode } from '../../enums/httpStatusCode';\r\n\r\n/**\r\n * problem result\r\n */\r\nexport class ProblemResult {\r\n\r\n    /**\r\n     * error detail\r\n     */\r\n    public detail: string;\r\n\r\n    /**\r\n     * instance url\r\n     */\r\n    public instance: string;\r\n\r\n    /**\r\n     * error status code\r\n     */\r\n    public status: HttpStatusCode;\r\n\r\n    /**\r\n     * error title\r\n     */\r\n    public title: string;\r\n\r\n    /**\r\n     * error type\r\n     */\r\n    public type: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/results/problemResult.ts","\r\n//import * as BaseClasses from './baseClasses/index';\r\n//import * as Components from './components/index';\r\nimport * as Constants from './constants/index';\r\nimport * as Enums from './enums/index';\r\nimport * as Exceptions from './exceptions/index';\r\nimport * as Models from './models/index';\r\n//import * as Services from './services/index';\r\n\r\nexport {\r\n    //BaseClasses,\r\n    //Components,\r\n    Constants,\r\n    Enums,\r\n    Exceptions,\r\n    Models,\r\n    //Services\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","\r\nimport { EventConsts } from './eventConsts';\r\nimport { TypeConsts } from './typeConsts';\r\n\r\nexport {\r\n    EventConsts,\r\n    TypeConsts\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/index.ts","/**\r\n * The event constants.\r\n */\r\nexport class EventConsts {\r\n\r\n    /**\r\n     * The reload grid event name.\r\n     */\r\n    public static reloadGridEvent: string = 'reloadGrid';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/constants/eventConsts.ts","/**\r\n * type constants.\r\n */\r\nexport class TypeConsts {\r\n\r\n    /**\r\n     * The empty guid value.\r\n     */\r\n    public static emptyGuid: string = '00000000-0000-0000-0000-000000000000';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/constants/typeConsts.ts","\r\nimport { EditorState } from './editorState';\r\nimport { ErrorResponseType } from './errorResponseType';\r\nimport { HttpStatusCode } from './httpStatusCode';\r\nimport { ManagerState } from './managerState';\r\n\r\nexport {\r\n    EditorState,\r\n    ErrorResponseType,\r\n    HttpStatusCode,\r\n    ManagerState\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/index.ts","/**\r\n * The state of the editor component.\r\n */\r\nexport enum EditorState {\r\n\r\n    /**\r\n     * Adding a new item.\r\n     */\r\n    Add,\r\n\r\n    /**\r\n     * Editing an existing item.    \r\n     */\r\n    Edit\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/editorState.ts","\r\n/**\r\n * Error response types.\r\n */\r\nexport enum ErrorResponseType {\r\n    ConnectionLost,\r\n    ProblemResult,\r\n    ValidationProblemResult\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/errorResponseType.ts","\r\n/**\r\n * Http status code.\r\n */\r\nexport enum HttpStatusCode {\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 100. System.Net.HttpStatusCode.Continue indicates that\r\n    //     the client can continue with its request.\r\n    Continue = 100,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 101. System.Net.HttpStatusCode.SwitchingProtocols indicates\r\n    //     that the protocol version or protocol is being changed.\r\n    SwitchingProtocols = 101,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 200. System.Net.HttpStatusCode.OK indicates that the\r\n    //     request succeeded and that the requested information is in the response. This\r\n    //     is the most common status code to receive.\r\n    OK = 200,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 201. System.Net.HttpStatusCode.Created indicates that\r\n    //     the request resulted in a new resource created before the response was sent.\r\n    Created = 201,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 202. System.Net.HttpStatusCode.Accepted indicates that\r\n    //     the request has been accepted for further processing.\r\n    Accepted = 202,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 203. System.Net.HttpStatusCode.NonAuthoritativeInformation\r\n    //     indicates that the returned metainformation is from a cached copy instead of\r\n    //     the origin server and therefore may be incorrect.\r\n    NonAuthoritativeInformation = 203,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 204. System.Net.HttpStatusCode.NoContent indicates\r\n    //     that the request has been successfully processed and that the response is intentionally\r\n    //     blank.\r\n    NoContent = 204,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 205. System.Net.HttpStatusCode.ResetContent indicates\r\n    //     that the client should reset (not reload) the current resource.\r\n    ResetContent = 205,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 206. System.Net.HttpStatusCode.PartialContent indicates\r\n    //     that the response is a partial response as requested by a GET request that includes\r\n    //     a byte range.\r\n    PartialContent = 206,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 300. System.Net.HttpStatusCode.MultipleChoices indicates\r\n    //     that the requested information has multiple representations. The default action\r\n    //     is to treat this status as a redirect and follow the contents of the Location\r\n    //     header associated with this response.\r\n    MultipleChoices = 300,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 300. System.Net.HttpStatusCode.Ambiguous indicates\r\n    //     that the requested information has multiple representations. The default action\r\n    //     is to treat this status as a redirect and follow the contents of the Location\r\n    //     header associated with this response.\r\n    Ambiguous = 300,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 301. System.Net.HttpStatusCode.MovedPermanently indicates\r\n    //     that the requested information has been moved to the URI specified in the Location\r\n    //     header. The default action when this status is received is to follow the Location\r\n    //     header associated with the response.\r\n    MovedPermanently = 301,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 301. System.Net.HttpStatusCode.Moved indicates that\r\n    //     the requested information has been moved to the URI specified in the Location\r\n    //     header. The default action when this status is received is to follow the Location\r\n    //     header associated with the response. When the original request method was POST,\r\n    //     the redirected request will use the GET method.\r\n    Moved = 301,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 302. System.Net.HttpStatusCode.Found indicates that\r\n    //     the requested information is located at the URI specified in the Location header.\r\n    //     The default action when this status is received is to follow the Location header\r\n    //     associated with the response. When the original request method was POST, the\r\n    //     redirected request will use the GET method.\r\n    Found = 302,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 302. System.Net.HttpStatusCode.Redirect indicates that\r\n    //     the requested information is located at the URI specified in the Location header.\r\n    //     The default action when this status is received is to follow the Location header\r\n    //     associated with the response. When the original request method was POST, the\r\n    //     redirected request will use the GET method.\r\n    Redirect = 302,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 303. System.Net.HttpStatusCode.SeeOther automatically\r\n    //     redirects the client to the URI specified in the Location header as the result\r\n    //     of a POST. The request to the resource specified by the Location header will\r\n    //     be made with a GET.\r\n    SeeOther = 303,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 303. System.Net.HttpStatusCode.RedirectMethod automatically\r\n    //     redirects the client to the URI specified in the Location header as the result\r\n    //     of a POST. The request to the resource specified by the Location header will\r\n    //     be made with a GET.\r\n    RedirectMethod = 303,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 304. System.Net.HttpStatusCode.NotModified indicates\r\n    //     that the client's cached copy is up to date. The contents of the resource are\r\n    //     not transferred.\r\n    NotModified = 304,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 305. System.Net.HttpStatusCode.UseProxy indicates that\r\n    //     the request should use the proxy server at the URI specified in the Location\r\n    //     header.\r\n    UseProxy = 305,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 306. System.Net.HttpStatusCode.Unused is a proposed\r\n    //     extension to the HTTP/1.1 specification that is not fully specified.\r\n    Unused = 306,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 307. System.Net.HttpStatusCode.TemporaryRedirect indicates\r\n    //     that the request information is located at the URI specified in the Location\r\n    //     header. The default action when this status is received is to follow the Location\r\n    //     header associated with the response. When the original request method was POST,\r\n    //     the redirected request will also use the POST method.\r\n    TemporaryRedirect = 307,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 307. System.Net.HttpStatusCode.RedirectKeepVerb indicates\r\n    //     that the request information is located at the URI specified in the Location\r\n    //     header. The default action when this status is received is to follow the Location\r\n    //     header associated with the response. When the original request method was POST,\r\n    //     the redirected request will also use the POST method.\r\n    RedirectKeepVerb = 307,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 400. System.Net.HttpStatusCode.BadRequest indicates\r\n    //     that the request could not be understood by the server. System.Net.HttpStatusCode.BadRequest\r\n    //     is sent when no other error is applicable, or if the exact error is unknown or\r\n    //     does not have its own error code.\r\n    BadRequest = 400,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 401. System.Net.HttpStatusCode.Unauthorized indicates\r\n    //     that the requested resource requires authentication. The WWW-Authenticate header\r\n    //     contains the details of how to perform the authentication.\r\n    Unauthorized = 401,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 402. System.Net.HttpStatusCode.PaymentRequired is reserved\r\n    //     for future use.\r\n    PaymentRequired = 402,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 403. System.Net.HttpStatusCode.Forbidden indicates\r\n    //     that the server refuses to fulfill the request.\r\n    Forbidden = 403,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 404. System.Net.HttpStatusCode.NotFound indicates that\r\n    //     the requested resource does not exist on the server.\r\n    NotFound = 404,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 405. System.Net.HttpStatusCode.MethodNotAllowed indicates\r\n    //     that the request method (POST or GET) is not allowed on the requested resource.\r\n    MethodNotAllowed = 405,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 406. System.Net.HttpStatusCode.NotAcceptable indicates\r\n    //     that the client has indicated with Accept headers that it will not accept any\r\n    //     of the available representations of the resource.\r\n    NotAcceptable = 406,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 407. System.Net.HttpStatusCode.ProxyAuthenticationRequired\r\n    //     indicates that the requested proxy requires authentication. The Proxy-authenticate\r\n    //     header contains the details of how to perform the authentication.\r\n    ProxyAuthenticationRequired = 407,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 408. System.Net.HttpStatusCode.RequestTimeout indicates\r\n    //     that the client did not send a request within the time the server was expecting\r\n    //     the request.\r\n    RequestTimeout = 408,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 409. System.Net.HttpStatusCode.Conflict indicates that\r\n    //     the request could not be carried out because of a conflict on the server.\r\n    Conflict = 409,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 410. System.Net.HttpStatusCode.Gone indicates that\r\n    //     the requested resource is no longer available.\r\n    Gone = 410,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 411. System.Net.HttpStatusCode.LengthRequired indicates\r\n    //     that the required Content-length header is missing.\r\n    LengthRequired = 411,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 412. System.Net.HttpStatusCode.PreconditionFailed indicates\r\n    //     that a condition set for this request failed, and the request cannot be carried\r\n    //     out. Conditions are set with conditional request headers like If-Match, If-None-Match,\r\n    //     or If-Unmodified-Since.\r\n    PreconditionFailed = 412,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 413. System.Net.HttpStatusCode.RequestEntityTooLarge\r\n    //     indicates that the request is too large for the server to process.\r\n    RequestEntityTooLarge = 413,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 414. System.Net.HttpStatusCode.RequestUriTooLong indicates\r\n    //     that the URI is too long.\r\n    RequestUriTooLong = 414,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 415. System.Net.HttpStatusCode.UnsupportedMediaType\r\n    //     indicates that the request is an unsupported type.\r\n    UnsupportedMediaType = 415,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 416. System.Net.HttpStatusCode.RequestedRangeNotSatisfiable\r\n    //     indicates that the range of data requested from the resource cannot be returned,\r\n    //     either because the beginning of the range is before the beginning of the resource,\r\n    //     or the end of the range is after the end of the resource.\r\n    RequestedRangeNotSatisfiable = 416,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 417. System.Net.HttpStatusCode.ExpectationFailed indicates\r\n    //     that an expectation given in an Expect header could not be met by the server.\r\n    ExpectationFailed = 417,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 426. System.Net.HttpStatusCode.UpgradeRequired indicates\r\n    //     that the client should switch to a different protocol such as TLS/1.0.\r\n    UpgradeRequired = 426,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 500. System.Net.HttpStatusCode.InternalServerError\r\n    //     indicates that a generic error has occurred on the server.\r\n    InternalServerError = 500,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 501. System.Net.HttpStatusCode.NotImplemented indicates\r\n    //     that the server does not support the requested function.\r\n    NotImplemented = 501,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 502. System.Net.HttpStatusCode.BadGateway indicates\r\n    //     that an intermediate proxy server received a bad response from another proxy\r\n    //     or the origin server.\r\n    BadGateway = 502,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 503. System.Net.HttpStatusCode.ServiceUnavailable indicates\r\n    //     that the server is temporarily unavailable, usually due to high load or maintenance.\r\n    ServiceUnavailable = 503,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 504. System.Net.HttpStatusCode.GatewayTimeout indicates\r\n    //     that an intermediate proxy server timed out while waiting for a response from\r\n    //     another proxy or the origin server.\r\n    GatewayTimeout = 504,\r\n    //\r\n    // Summary:\r\n    //     Equivalent to HTTP status 505. System.Net.HttpStatusCode.HttpVersionNotSupported\r\n    //     indicates that the requested HTTP version is not supported by the server.\r\n    HttpVersionNotSupported = 505\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/httpStatusCode.ts","/**\r\n * The state of the manager component.\r\n */\r\nexport enum ManagerState {\r\n\r\n    /**\r\n     * Display the lookup grid.\r\n     */\r\n    Lookup = 0,\r\n\r\n    /**\r\n     * Display the editor.    \r\n     */\r\n    Editor = 1\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/managerState.ts","\r\nimport { ResponseError } from './responseError';\r\nexport {\r\n    ResponseError\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/index.ts","\r\nimport {ErrorResponseType} from '../enums/errorResponseType';\r\n\r\n/**\r\n * Response error exception.\r\n */\r\nexport class ResponseError extends Error {\r\n\r\n    /**\r\n     * Creates a new response error.\r\n     * @param message\r\n     * @param data\r\n     */\r\n    constructor(public type: ErrorResponseType, message: string, public data?: any) {\r\n        super(message);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/responseError.ts","\r\nimport { RequestOptions } from './http/requestOptions';\r\n\r\nimport { ProblemResult } from './results/problemResult';\r\nimport { ValidationProblemResult } from './results/validationProblemResult';\r\n\r\nimport { UiGridRequest } from './uiGrid/uiGridRequest';\r\nimport { UiGridResult } from './uiGrid/uiGridResult';\r\n\r\nimport { ErrorBlockModel } from './errorBlock';\r\n\r\nexport {\r\n    RequestOptions,\r\n    ProblemResult,\r\n    ValidationProblemResult,\r\n    UiGridRequest,\r\n    UiGridResult,\r\n    ErrorBlockModel\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.ts","/**\r\n * The request options to be passed to the api service request function.\r\n */\r\nexport class RequestOptions {\r\n\r\n    // TODO: Reverse order of url, string params.\r\n    constructor(url: string, method: string, baseUrl: string = './') {\r\n        \r\n        this.url = baseUrl.concat(url);\r\n        this.method = method;\r\n        this.rethrow = true;\r\n    }\r\n\r\n    /**\r\n     * The http method.\r\n     */\r\n    public method: string;\r\n\r\n    /**\r\n     * The url.\r\n     */\r\n    public url: string;\r\n\r\n    /**\r\n     * The query parameters to append to the request url.\r\n     * @example { id: 3 }\r\n     */\r\n    public params: any;\r\n\r\n    /**\r\n     * The data to be sent.\r\n     */\r\n    public data: any;\r\n\r\n    /**\r\n     * Any additional headers to add to the request.\r\n     * @example { Content-Type: \"image/png\" }\r\n     */\r\n    public headers: any;\r\n\r\n    /**\r\n     * Whether or not to make an unauthorized request.\r\n     */\r\n    public unauthorized: boolean;\r\n\r\n    /**\r\n     * Whether or not to rethrow any error encountered.\r\n     */\r\n    public rethrow: boolean;\r\n\r\n    /**\r\n     * The transform request option.\r\n     */\r\n    public transformRequest: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/http/requestOptions.ts","import { ProblemResult } from './problemResult';\r\n\r\n/**\r\n * validaiton problem result.\r\n */\r\nexport class ValidationProblemResult extends ProblemResult {\r\n\r\n    /**\r\n     * errors field.\r\n     */\r\n    public errors: Map<string, string[]>;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/results/validationProblemResult.ts","/**\r\n * the grid request model.\r\n */\r\nexport class UiGridRequest {\r\n    /**\r\n     * page number\r\n     */\r\n    public page: number;\r\n\r\n    /**\r\n     * page size number.\r\n     */\r\n    public pageSize: number;\r\n\r\n    /**\r\n     * the sort request.\r\n     */\r\n    public sort: SortRequest;\r\n\r\n    /**\r\n     * filters.\r\n     */\r\n    public filters: Array<FilterRequest>;\r\n}\r\n\r\n/**\r\n * sort request model.\r\n */\r\nexport class SortRequest {\r\n\r\n    /**\r\n     * sort direction.\r\n     */\r\n    public direction: string;\r\n\r\n    /**\r\n     * sort member.\r\n     */\r\n    public memberName: string;\r\n}\r\n\r\n/**\r\n * filter request.\r\n */\r\nexport class FilterRequest {\r\n    /**\r\n     * member name.\r\n     */\r\n    public memberName: string; \r\n    /**\r\n     * filter value.\r\n     */\r\n\tpublic value: string;\r\n\r\n    /**\r\n     * the filter condition.\r\n     */\r\n    public condition: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/uiGrid/uiGridRequest.ts","export class UiGridResult<T> {\r\n    /**\r\n     * The data returned to the grid.\r\n     */\r\n    public data: Array<T>;\r\n\r\n    /**\r\n     * The totel number of items the result can return.\r\n     */\r\n    public totalItems: number;\r\n\r\n    public length: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/uiGrid/uiGridResult.ts","/**\r\n * the error block model.\r\n */\r\nexport class ErrorBlockModel {\r\n\r\n    /**\r\n     * shows the error message.\r\n     */\r\n    public showError: boolean;\r\n\r\n    /**\r\n     * the error message.\r\n     */\r\n    public errorMessage: string;\r\n\r\n    /**\r\n     * the error title.\r\n     */\r\n    public errorTitle: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/errorBlock.ts"],"sourceRoot":""}